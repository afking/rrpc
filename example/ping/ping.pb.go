// Code generated by protoc-gen-go.
// source: ping.proto
// DO NOT EDIT!

/*
Package ping is a generated protocol buffer package.

It is generated from these files:
	ping.proto

It has these top-level messages:
	PingRequest
	PingResponse
*/
package ping

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	rrpc "github.com/afking/rrpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingResponse struct {
	Seconds int64 `protobuf:"varint,2,opt,name=seconds" json:"seconds,omitempty"`
	Nanos   int32 `protobuf:"varint,3,opt,name=nanos" json:"nanos,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PingResponse)(nil), "PingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ rrpc.Service

// Client API for PingService service

type PingServiceClient interface {
	Ping(ctx context.Context, in *PingRequest) (*PingResponse, error)
}

type pingServiceClient struct {
	cc *rrpc.Service
}

func NewPingServiceClient(cc *rrpc.Service) PingServiceClient {
	return &pingServiceClient{cc}
}

func (c *pingServiceClient) Ping(ctx context.Context, in *PingRequest) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "PingService", "Ping", in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PingService service

type PingServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

func RegisterPingServiceServer(s *rrpc.Service, srv PingServiceServer) {
	s.RegisterService(&_PingService_serviceDesc, srv)
}

func _PingService_Ping_Handler(srv interface{}, ctx context.Context, b []byte) ([]byte, error) {
	in := new(PingRequest)
	if err := rrpc.Dec(b, in); err != nil {
		return nil, err
	}
	out, err := srv.(PingServiceServer).Ping(ctx, in)
	if err != nil {
		return nil, err
	}
	return rrpc.Enc(out)
}

var _PingService_serviceDesc = rrpc.ServiceDesc{
	ServiceName: "PingService",
	HandlerType: (*PingServiceServer)(nil),
	Methods: []rrpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _PingService_Ping_Handler,
		},
	},
}

var fileDescriptor0 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0xcc, 0x4b,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xe2, 0xe5, 0xe2, 0x0e, 0x00, 0xf2, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x94, 0xf4, 0xb8, 0x78, 0x20, 0xdc, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54,
	0x21, 0x7e, 0x2e, 0xf6, 0xe2, 0xd4, 0xe4, 0xfc, 0xbc, 0x94, 0x62, 0x09, 0x26, 0x05, 0x46, 0x0d,
	0x66, 0x21, 0x5e, 0x2e, 0xd6, 0xbc, 0xc4, 0xbc, 0xfc, 0x62, 0x09, 0x66, 0x20, 0x97, 0xd5, 0xc8,
	0x08, 0xa2, 0x3d, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x48, 0x99, 0x8b, 0x05, 0xc4, 0x15,
	0xe2, 0xd1, 0x43, 0x32, 0x54, 0x8a, 0x57, 0x0f, 0xd9, 0xcc, 0x24, 0x36, 0xb0, 0xcd, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xba, 0xb1, 0xaa, 0xd1, 0x87, 0x00, 0x00, 0x00,
}
